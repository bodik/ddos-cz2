#!/usr/bin/python3
"""tg python trafgen wrapper"""

import argparse
import logging
import sys
import tg

logger = logging.getLogger()
logging.basicConfig(level=logging.INFO, stream=sys.stdout, format='%(levelname)s %(message)s')



def parse_arguments():
	"""parse arguments"""

	parser = argparse.ArgumentParser()
	parser_command = parser.add_subparsers(dest="generator", help="generator name")
	parser_command.required = True # python3 subparsers flapping about default require value, and require kwarg

	for cls in tg.modreg.registered_classes:
		tg.runner.Runner.build_arguments_parser(parser_command.add_parser(cls.__name__), cls)

	return parser.parse_args()



def main():
	"""main"""

	args = parse_arguments()
	if args.debug:
		logger.setLevel(logging.DEBUG)

	runner = tg.runner.Runner(getattr(tg, args.generator), args.__dict__)
	logger.debug("generator fields: %s", runner.fields)

	if args.dump:
		print(runner.compile())
		ret = 0
	else:
		ret = runner.run()

	return ret



if __name__ == "__main__":
	sys.exit(main())
